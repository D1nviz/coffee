{"version":3,"file":"static/js/238.99fb19e4.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-transition-group/esm/SwitchTransition.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","args","Array","_key","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","phase","forceReflow","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","Transition","defaultProps","propTypes","_leaveRenders","_enterRenders","modes","callHook","name","cb","_element$props","leaveRenders","_ref","changeState","in","ENTERING","_ref2","children","enterRenders","_ref3","ENTERED","_ref4","SwitchTransition","state","status","appeared","setState","componentDidMount","getDerivedStateFromProps","mode","oldChildren","newChildren","EXITING","component","_this$state","data","TransitionGroupContext","value","isMounting","UNMOUNTED","EXITED","context","initialStatus","appearStatus","unmountOnExit","mountOnEnter","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","undefined","mounting","ReactDOM","performEnter","performExit","_this2","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","callback","setNextCallback","_this4","event","handler","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","setTimeout","childProps","noop","contextType","scrollTop","subClass","superClass","create","constructor","excluded","sourceKeys","keys"],"sourceRoot":""}