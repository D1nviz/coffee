{"version":3,"file":"static/js/592.387e2dc7.chunk.js","mappings":"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","sources":["components/CoffeeList/index.jsx","components/Context/index.jsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","components/AppSearch/index.jsx","components/pages/OurCoffeePage/index.jsx"],"sourcesContent":["import {  CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { postItems } from \"../Constants\";\r\nimport { filterContext, searchContext } from \"../Context\";\r\nimport {\r\n   SectionCoffeeList,\r\n   CoffeeListGrid,\r\n   ItemContainer,\r\n   ItemTitle,\r\n   ItemCountry,\r\n   ItemPrice,\r\n   ItemThumbnail,\r\n   ItemEntryWrapper,\r\n   ItemTextFolder,\r\n   NoResultsMessage\r\n} from \"../styles\";\r\n\r\nconst onFilter = (items, filter) => {\r\n   return filter === \"all\" ? items : items.filter(item => item.country === filter);\r\n};\r\n\r\nconst onSearch = (searchQuery, postItems) => {\r\n   return postItems.filter(item => {\r\n      return item.title.toLowerCase().startsWith(searchQuery.toLowerCase());\r\n   });\r\n};\r\n\r\n\r\nconst CoffeeList = () => {\r\n   const { searchQuery } = useContext(searchContext);\r\n   const { filter } = useContext(filterContext);\r\n   const posts = onSearch(searchQuery, postItems);\r\n   const filteredPosts = onFilter(posts, filter);\r\n\r\n   const renderPosts = () => (\r\n      <CoffeeListGrid>\r\n         {filteredPosts.map(({ id, title, country, price, img }, i) => (\r\n            <SwitchTransition key={i}>\r\n               <CSSTransition  \r\n                  key={id}\r\n                  timeout={300}\r\n                  classNames=\"fade\"\r\n               >\r\n                  <ItemContainer>\r\n                     <Link to={`/our-coffee/${id}`}>\r\n                        <ItemEntryWrapper>\r\n                           <ItemThumbnail><img src={img} alt={title} /></ItemThumbnail>\r\n                           <ItemTextFolder>\r\n                              <ItemTitle>{title}</ItemTitle>\r\n                              <ItemCountry>{country}</ItemCountry>\r\n                              <ItemPrice>{price}</ItemPrice>\r\n                           </ItemTextFolder>\r\n                        </ItemEntryWrapper>\r\n                     </Link>\r\n                  </ItemContainer>\r\n               </CSSTransition>\r\n            </SwitchTransition>))}\r\n      </CoffeeListGrid>\r\n   );\r\n\r\n   return (\r\n      <SectionCoffeeList>\r\n         {filteredPosts.length ? renderPosts() : <NoResultsMessage> No results</NoResultsMessage>}\r\n      </SectionCoffeeList >\r\n   )\r\n};\r\n\r\nexport default CoffeeList;\r\n","import { createContext } from \"react\";\r\n\r\nexport const sectionContext = createContext();\r\nexport const sectionAboutContext = createContext();\r\nexport const searchContext = createContext();\r\nexport const filterContext = createContext();","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from \"uuid\";\r\nimport { useState, useContext, useRef } from \"react\";\r\nimport { searchContext, filterContext } from \"../Context\";\r\nimport { filterProps } from \"../Constants\";\r\nimport {\r\n  FilterSearchWrapper,\r\n  FilterSearchContainer,\r\n  SearhContainer,\r\n  SearchLabel,\r\n  SearchInput,\r\n  FilterContainer,\r\n  FilterButtonsContainer,\r\n  FiltersText,\r\n  FilterButton,\r\n} from \"../styles/\";\r\n\r\nconst AppSearch = () => {\r\n  const buttonRefs = useRef([]);\r\n\r\n  const onToggleFilter = (filter, setFilter, prevFilter, setPrevFilter, index) => {\r\n    if (prevFilter === filter) {\r\n      setFilter(\"all\");\r\n      setPrevFilter(\"all\");\r\n      return;\r\n    }\r\n    buttonRefs.current.forEach((ref) => {\r\n      ref.classList.remove(\"selected\");\r\n    }\r\n    );\r\n    buttonRefs.current[index].classList.add(\"selected\");\r\n    setPrevFilter(filter);\r\n    setFilter(filter);\r\n  };\r\n\r\n  const filterButtons = (setFilter, prevFilter, setPrevFilter) =>\r\n    filterProps.map((prop, index) => {\r\n      const key = uuidv4();\r\n      return (\r\n        <FilterButton\r\n          key={key}\r\n          ref={(ref) => (buttonRefs.current[index] = ref)}\r\n          className={prevFilter === prop ? \"selected\" : \"\"}\r\n          onClick={() => onToggleFilter(prop, setFilter, prevFilter, setPrevFilter, index)}\r\n        >\r\n          {prop}\r\n        </FilterButton>\r\n      );\r\n    });\r\n\r\n  const { searchQuery, setSearchQuery } = useContext(searchContext);\r\n  const { setFilter } = useContext(filterContext);\r\n  const [prevFilter, setPrevFilter] = useState(\"\");\r\n\r\n  return (\r\n    <FilterSearchWrapper>\r\n      <FilterSearchContainer>\r\n        <SearhContainer>\r\n          <SearchLabel htmlFor=\"search\">Looking for </SearchLabel>\r\n          <SearchInput\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            type=\"text\"\r\n            name=\"search\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"start typing here...\"\r\n          />\r\n        </SearhContainer>\r\n        <FilterContainer>\r\n          <FiltersText>Or filter</FiltersText>\r\n          <FilterButtonsContainer>\r\n            {filterButtons(setFilter, prevFilter, setPrevFilter)}\r\n          </FilterButtonsContainer>\r\n        </FilterContainer>\r\n      </FilterSearchContainer>\r\n    </FilterSearchWrapper>\r\n  );\r\n};\r\n\r\nexport default AppSearch;","import { Helmet } from \"react-helmet\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { searchContext, filterContext } from \"../../Context\";\r\nimport { ourCoffeDesripiton } from \"../../Constants\";\r\nimport AppHeader from \"../../AppHeader/\";\r\nimport AppProductsInfo from \"../../AppProductsInfo/\";\r\nimport AppSearch from \"../../AppSearch/\";\r\nimport CoffeeList from \"../../CoffeeList/\";\r\nimport background from \"../../../resourses/images/backgrounds/ourCoffee.png\";\r\nimport coffeeGirl from \"../../../resourses/images/Coffee/CoffeGirl.jpg\";\r\n\r\nconst OurCoffePage = () => {\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n      return () => { }\r\n   }, []);\r\n   const [searchQuery, setSearchQuery] = useState(\"\");\r\n   const [filter, setFilter] = useState(\"all\");\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta name=\"description\" content=\"Our Coffee\" />\r\n            <title>Our Coffee</title>\r\n         </Helmet>\r\n         <AppHeader\r\n            text={\"Our coffee\"}\r\n            background={background}\r\n         />\r\n         <main>\r\n            <AppProductsInfo\r\n               description={ourCoffeDesripiton}\r\n               title={\"About our beans\"}\r\n               image={coffeeGirl}\r\n               alt={\"Aesthetic coffee\"}\r\n            />\r\n            <searchContext.Provider value={{ searchQuery, setSearchQuery }}>\r\n               <filterContext.Provider value={{ filter, setFilter }}>\r\n                  <AppSearch />\r\n                  <CoffeeList />\r\n               </filterContext.Provider>\r\n            </searchContext.Provider>\r\n         </main>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default OurCoffePage;"],"names":["searchQuery","useContext","searchContext","filter","filterContext","posts","postItems","item","title","toLowerCase","startsWith","onSearch","filteredPosts","items","country","onFilter","_jsx","SectionCoffeeList","children","length","CoffeeListGrid","map","_ref","i","id","price","img","SwitchTransition","CSSTransition","timeout","classNames","ItemContainer","Link","to","concat","_jsxs","ItemEntryWrapper","ItemThumbnail","src","alt","ItemTextFolder","ItemTitle","ItemCountry","ItemPrice","NoResultsMessage","sectionContext","createContext","sectionAboutContext","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","push","toString","slice","unsafeStringify","arr","offset","arguments","undefined","options","buf","native","rnds","random","buttonRefs","useRef","_useContext","setSearchQuery","setFilter","_useState","useState","_useState2","_slicedToArray","prevFilter","setPrevFilter","FilterSearchWrapper","FilterSearchContainer","SearhContainer","SearchLabel","htmlFor","SearchInput","value","onChange","e","target","type","name","autoComplete","placeholder","FilterContainer","FiltersText","FilterButtonsContainer","filterProps","prop","index","key","uuidv4","FilterButton","ref","current","className","onClick","forEach","classList","remove","add","onToggleFilter","filterButtons","useEffect","window","scrollTo","_useState3","_useState4","_Fragment","Helmet","content","AppHeader","text","background","AppProductsInfo","description","ourCoffeDesripiton","image","coffeeGirl","AppSearch","CoffeeList"],"sourceRoot":""}